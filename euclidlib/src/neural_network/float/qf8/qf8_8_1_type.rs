use super::QFloat8;

#[allow(non_camel_case_types)]
/// Float number with `(-8.0, 8.0)` range with increased precision around `0.0`.
///
/// - 128 values in `(-2.0, 2.0)`.
/// - 64 values in `(-4.0, -2.0)` and `(2.0, 4.0)`.
/// - 64 values in `(-8.0, -4.0)` and `(4.0, 8.0)`.
///
/// More details are available in `QFloat8` documentation.
///
/// ## Distribution chart:
///
/// ```text,ignore
///                          ^
///                 ---------|---------                    128 values
///           ------         |         ------               64 values
///     ------               |               ------         64 values
/// ---+-----+-----+-----+---+---+-----+-----+-----+--->
///  -8.0  -4.0  -2.0  -1.0  0  1.0   2.0   4.0   8.0
/// ```
///
/// ## Available values:
///
/// List of values which can be stored in this float type, excluding
/// negative ones.
///
/// ### Exponent 0:
///
/// ```text,ignore
/// 0.00000000, 0.03125000, 0.06250000, 0.09375000,
/// 0.12500000, 0.15625000, 0.18750000, 0.21875000,
/// 0.25000000, 0.28125000, 0.31250000, 0.34375000,
/// 0.37500000, 0.40625000, 0.43750000, 0.46875000,
/// 0.50000000, 0.53125000, 0.56250000, 0.59375000,
/// 0.62500000, 0.65625000, 0.68750000, 0.71875000,
/// 0.75000000, 0.78125000, 0.81250000, 0.84375000,
/// 0.87500000, 0.90625000, 0.93750000, 0.96875000
/// ```
///
/// ### Exponent 1:
///
/// ```text,ignore
/// 1.00000000, 1.03125000, 1.06250000, 1.09375000,
/// 1.12500000, 1.15625000, 1.18750000, 1.21875000,
/// 1.25000000, 1.28125000, 1.31250000, 1.34375000,
/// 1.37500000, 1.40625000, 1.43750000, 1.46875000,
/// 1.50000000, 1.53125000, 1.56250000, 1.59375000,
/// 1.62500000, 1.65625000, 1.68750000, 1.71875000,
/// 1.75000000, 1.78125000, 1.81250000, 1.84375000,
/// 1.87500000, 1.90625000, 1.93750000, 1.96875000
/// ```
///
/// ### Exponent 2:
///
/// ```text,ignore
/// 2.00000000, 2.06250000, 2.12500000, 2.18750000,
/// 2.25000000, 2.31250000, 2.37500000, 2.43750000,
/// 2.50000000, 2.56250000, 2.62500000, 2.68750000,
/// 2.75000000, 2.81250000, 2.87500000, 2.93750000,
/// 3.00000000, 3.06250000, 3.12500000, 3.18750000,
/// 3.25000000, 3.31250000, 3.37500000, 3.43750000,
/// 3.50000000, 3.56250000, 3.62500000, 3.68750000,
/// 3.75000000, 3.81250000, 3.87500000, 3.93750000
/// ```
///
/// ### Exponent 3:
///
/// ```text,ignore
/// 4.00000000, 4.12500000, 4.25000000, 4.37500000,
/// 4.50000000, 4.62500000, 4.75000000, 4.87500000,
/// 5.00000000, 5.12500000, 5.25000000, 5.37500000,
/// 5.50000000, 5.62500000, 5.75000000, 5.87500000,
/// 6.00000000, 6.12500000, 6.25000000, 6.37500000,
/// 6.50000000, 6.62500000, 6.75000000, 6.87500000,
/// 7.00000000, 7.12500000, 7.25000000, 7.37500000,
/// 7.50000000, 7.62500000, 7.75000000, 7.87500000
/// ```
pub type qf8_8_1 = QFloat8<8, 8, 4, 2, 1>;
